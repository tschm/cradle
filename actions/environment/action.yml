name: Build Environment
description: "Build the environment using pyproject.toml and uv"

inputs:
  python-version:
    description: 'The Python we shall use'
    required: false
    default: '3.12'

runs:
  using: "composite"

  steps:
    - name: Checkout [${{ github.repository }}]
      uses: actions/checkout@v4

    - name: Install UV (Unix)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      shell: bash
      run: |
        set -eo pipefail
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        echo "${{ github.workspace }}/.venv/bin" >> $GITHUB_PATH

        unset PYTHONHOME


    - name: Install UV (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        irm https://astral.sh/uv/install.ps1 | iex
        $uvPath = "C:\Users\runneradmin\.local\bin"
        Add-Content $env:GITHUB_PATH $uvPath

        Add-Content $env:GITHUB_PATH ${{ github.workspace }}\.venv\Scripts

        Remove-Item -Path Env:PYTHONHOME -ErrorAction SilentlyContinue

    - name: Install pip and create venv
      shell: bash
      run: |
        uv venv --python ${{ inputs.python-version }}

    - name: Install dependencies if requirements.txt exists
      shell: bash
      run: |
        if [ -f "requirements.txt" ]; then
          uv pip install -r requirements.txt
        else
          if [ -f "uv.lock" ]; then
            uv sync --all-extras --dev --frozen
          else
            uv sync --all-extras --dev
          fi
        fi

        uv pip install pip

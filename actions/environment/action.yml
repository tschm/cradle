# GitHub Action to set up a Python development environment
# This action installs all dependencies defined in pyproject.toml or requirements.txt using uv
name: Build Environment
description: "Build the Python development environment using pyproject.toml or requirements.txt with uv package manager"

inputs:
  python-version:
    description: 'The Python version to use for the environment (e.g., 3.9, 3.10, 3.11, 3.12)'
    required: false
    default: '3.12'  # Default to the latest stable Python version
  use-requirements-txt:
    description: 'Whether to use requirements.txt instead of pyproject.toml'
    required: false
    default: 'false'
  requirements-path:
    description: 'Path to the requirements.txt file'
    required: false
    default: 'requirements.txt'

runs:
  using: "composite"  # Composite actions combine multiple steps

  steps:
    # Step 1: Check out the repository code
    # This ensures we have the latest code from the specified ref
    - name: Checkout ${{ github.repository }}
      uses: actions/checkout@v4  # Official GitHub checkout action

    # Step 2: Set up Python with the uv package manager
    # This installs Python and uv for faster dependency management
    - name: Set up Python ${{ inputs.python-version }}
      uses: astral-sh/setup-uv@v6  # Official action for setting up uv
      with:
        python-version: ${{ inputs.python-version }}  # Use the specified Python version

    # Step 2.5
    - name: Create a Python virtual environment
      shell: bash
      run: |
        set -e  # Exit immediately if any command fails
        echo "Creating virtual environment with Python ${{ inputs.python-version }}"
        uv venv --python "${{ inputs.python-version }}"

    # Step 3 with requirements.txt
    - name: Setup venv based on requirements.txt
      shell: bash
      if: inputs.use-requirements-txt == 'true'
      run: |
        set -e  # Exit immediately if any command fails
        echo "Installing dependencies from ${{ inputs.requirements-path }}"
        uv pip install -r "${{ inputs.requirements-path }}"

    # Step 3 with pyproject.toml
    - name: Setup venv using pyproject.toml
      shell: bash
      if: inputs.use-requirements-txt == 'false'
      run: |
        set -e
        echo "Installing dependencies from pyproject.toml"
        uv sync --all-extras

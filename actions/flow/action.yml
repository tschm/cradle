# GitHub Action to test GitHub workflow files locally using act
# This action allows testing workflows without pushing to GitHub
name: flow
description: "Test a GitHub Actions workflow locally using act"

inputs:
  workflow:
    description: 'Workflow file to test (e.g., ci.yml, release.yml, marimo.yml)'
    required: true
    # No default provided as this should be explicitly set for each test

  working-directory:
    description: 'Directory where the GitHub workflow files are located'
    required: false
    default: 'template'  # Default to the template directory

runs:
  using: "composite"  # Composite actions combine multiple steps
  steps:
    # Step 1: Install the act tool for local workflow testing
    # This downloads and installs act from the official repository
    - name: Install act
      shell: bash
      run: |
        # Download and run the official installation script
        curl https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash

        # Add the installation directory to PATH for subsequent steps
        echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

    # Step 2: Verify that act was installed correctly
    # This ensures the tool is available before attempting to use it
    - name: Verify act installation
      shell: bash
      run: |
        # Check act version to confirm installation
        act --version

    - name: Check workflow file exists
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ ! -f ".github/workflows/${{ inputs.workflow }}" ]; then
          echo "ERROR: Workflow .github/workflows/${{ inputs.workflow }} not found in $PWD"
          exit 1
        fi

    # Step 3: Run the specified workflow using act
    # This executes the workflow file locally with a Ubuntu container
    - name: Test workflow
      shell: bash
      working-directory: ${{ inputs.working-directory }}  # Run in the specified directory
      run: |
        # Run the workflow with act
        # -W: Specify the workflow file to run
        # -P: Use a specific platform/image for execution
        # --env: Set environment variables for the workflow
        # Filter out common "remote not found" messages that aren't errors
        act -W .github/workflows/${{ inputs.workflow}} -P ubuntu-latest=ghcr.io/catthehacker/ubuntu:act-latest --env ACT='true' 2>&1 | grep -v "remote not found"

# GitHub Action to build and publish Docker images using Podman/Buildah
# This action builds a Docker image from a Dockerfile and pushes it to a container registry
name: Build and Release Docker image
description: "Build a Docker image and push it to a container registry (defaults to GitHub Container Registry)"

inputs:
  tag:
    description: 'Tag for the Docker image (e.g., latest, v1.0.0)'
    required: true
    # No default provided as this should be explicitly set for each build

  github_token:
    description: "GitHub token for authentication with the container registry"
    required: true
    # No default provided as this should be passed from the workflow secrets

  github_actor:
    description: "GitHub username for registry authentication"
    required: true
    # No default provided as this should be passed from the workflow context

  github_repository:
    description: "GitHub repository name (used as the image name)"
    required: true
    # No default provided as this should be passed from the workflow context

  dockerfiles:
    description: "Path to the Dockerfile(s) to build"
    required: false
    default: 'docker/Dockerfile'  # Default location for Dockerfile

  registry:
    description: "Container registry URL (e.g., ghcr.io, docker.io)"
    required: false
    default: "ghcr.io"  # Default to GitHub Container Registry

  labels:
    description: 'Docker image labels to apply. Separate by newline. For example, "io.containers.capabilities=sys_admin,mknod".'
    required: false
    default: ''  # Empty string as default for optional labels

runs:
  using: "composite"  # Composite actions combine multiple steps
  steps:
    # Step 1: Authenticate with the container registry
    # This logs in to the registry to allow pushing images
    - name: Log in to GitHub Container Registry
      uses: redhat-actions/podman-login@v1  # Red Hat's Podman login action
      with:
          username: ${{ inputs.github_actor }}  # GitHub username
          password: ${{ inputs.github_token }}  # GitHub token for authentication
          registry: ${{ inputs.registry }}  # Registry URL

    # Step 2: Build the Docker image using Buildah
    # This creates the image from the Dockerfile with the specified tags and labels
    - name: Build image
      id: build-image  # ID to reference outputs in later steps
      uses: redhat-actions/buildah-build@v2  # Red Hat's Buildah build action
      with:
        image: ${{ inputs.github_repository }}  # Name of the image to build
        tags: ${{ inputs.tag }}  # Tags to apply to the image
        dockerfiles: ${{ inputs.dockerfiles }}  # Path to the Dockerfile
        labels: ${{ inputs.labels }}  # Labels to apply to the image

    # Step 3: Push the built image to the container registry
    # This uploads the image to make it available for deployment
    - name: Push to container registry
      id: push-to-ghcr  # ID to reference outputs in later steps
      uses: redhat-actions/push-to-registry@v2  # Red Hat's registry push action
      with:
        image: ${{ steps.build-image.outputs.image }}  # Image name from build step
        tags: ${{ steps.build-image.outputs.tags }}  # Tags from build step
        registry: ${{ inputs.registry }}  # Registry URL to push to

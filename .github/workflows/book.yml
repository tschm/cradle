# GitHub Actions workflow for building documentation and running various checks
# This workflow builds documentation components and runs tests for the project

name: "book"

# Trigger the workflow on push events
# This ensures the documentation is automatically updated whenever code changes are pushed to main
on:
  push:
    branches:
      - main

permissions:
  contents: read  # Read-only access to repository contents

jobs:
  # Job to generate marimo interactive notebooks
  marimo:
    runs-on: "ubuntu-latest"
    steps:
      - name: Marimushka
        uses: jebel-quant/marimushka@v0.1.1
        with:
          notebooks: 'notebooks'

  # Job to generate API documentation using pdoc
  pdoc:
    runs-on: "ubuntu-latest"
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4

      # Step 2: Build the virtual environment
      - name: "Build the virtual environment for ${{ github.repository }}"
        uses: ./actions/environment

      # Step 3: Generate API documentation with pdoc
      - uses: ./actions/pdoc
        with:
          source-folder: 'src/cradle'  # Path to the source code to document

  # Job to run tests with coverage reporting
  test:
    runs-on: "ubuntu-latest"
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4

      # Step 2: Build the virtual environment
      - name: "Build the virtual environment for ${{ github.repository }}"
        uses: ./actions/environment

      # Step 3: Run tests with coverage reporting
      - uses: ./actions/coverage
        with:
          source-folder: 'src/cradle'  # Path to the source code
          tests-folder: 'src/tests'    # Path to the tests


  # Job to build the final documentation book
  book:
    runs-on: "ubuntu-latest"
    needs: [test, pdoc, marimo]  # This job depends on all previous jobs

    permissions:
      id-token: write
      pages: write

    environment:
      name: github-pages

    steps:
      # Step 1: Checkout the repository code only to make sure we see the actions folder
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4

      - uses: ./actions/minibook
        with:
          links: |
            API;pdoc/index.html
            notebooks;marimushka/index.html
            spiegel;https://www.spiegel.de
          output: artifacts

      - name: Inspect artifacts folder
        run: |
          tree artifacts

        # Package all artifacts for GitHub Pages deployment
        # This prepares the combined outputs for deployment
      - name: Upload static files as artifact
        id: upload
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: artifacts/  # Path to the directory containing all artifacts

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
